#ifndef __FONT_H
#define __FONT_H

#include "stdint.h"

/* Font type to use when printing a string on LED matrix. */
#define FONT_4x7   0x00
#define FONT_5x7   0x01
#define FONT_8x10  0x02

/* Total number of fonts defined. */
#define MAX_FONTS  3

typedef uint8_t UINT8;

struct font4x7
{
  UINT8 Row[7];
  UINT8 Width;
};


struct font5x7
{
  UINT8 Row[7];
  UINT8 Width;
};


struct font8x10
{
  UINT8 Row[10];
  UINT8 Width;
};



/* --------------------------------------------------------------------------------------------------------------------------- *\
                                               4 X 7 variable-width character set.
   NOTE: Characters are defined row by row, (rows 0 to 7, from top to bottom) Columns 0 to 4 (bitmap from left to right),
         then character width without any blank pixel column before or after the character pixels.

         The 4x7 character set will sometimes give ugly results... Character set 5x7 should be used instead.
         4x7 has been kept since the display matrix is not very large and it could be useful to display some characters in 4x7
         (numbers are all fine in 4x7).
\* --------------------------------------------------------------------------------------------------------------------------- */
const struct font4x7 Font4x7[128] =
{
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x00 (  0) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x01 (  1) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x02 (  2) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x03 (  3) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x04 (  4) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x05 (  5) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x06 (  6) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x07 (  7) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x08 (  8) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x09 (  9) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x0A ( 10) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x0B ( 11) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x0C ( 12) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x0D ( 13) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x0E ( 14) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x0F ( 15) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x10 ( 16) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x11 ( 17) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x12 ( 18) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x13 ( 19) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x14 ( 20) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x15 ( 21) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x16 ( 22) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x17 ( 23) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x18 ( 24) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x19 ( 25) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x1A ( 26) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x1B ( 27) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x1C ( 28) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x1D ( 29) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x1E ( 30) - ?
  {0x00, 0x03, 0x03, 0x00, 0x03, 0x03, 0x00,     0x02},     // ASCII 0x1F ( 31) - : (thick version)
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     0x01},     // ASCII 0x20 ( 32) - <blank>
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01,     0x01},     // ASCII 0x21 ( 33) - !
  {0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,     0x02},     // ASCII 0x22 ( 34) - "
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x23 ( 35) - #
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x24 ( 36) - $
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x25 ( 37) - %
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x26 ( 38) - &
  {0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,     0x01},     // ASCII 0x27 ( 39) - '
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x28 ( 40) - (
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x29 ( 41) - )
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x2A ( 42) - *
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x2B ( 43) - +
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x2C ( 44) - ,
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x2D ( 45) - <->
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x2E ( 46) - .
  {0x04, 0x04, 0x02, 0x02, 0x02, 0x01, 0x01,     0x04},     // ASCII 0x2F ( 47) - /
  {0x06, 0x09, 0x09, 0x09, 0x09, 0x09, 0x06,     0x04},     // ASCII 0x30 ( 48) - 0
  {0x02, 0x06, 0x02, 0x02, 0x02, 0x02, 0x07,     0x03},     // ASCII 0x31 ( 49) - 1
  {0x06, 0x09, 0x01, 0x02, 0x04, 0x08, 0x0F,     0x04},     // ASCII 0x32 ( 50) - 2
  {0x06, 0x09, 0x01, 0x06, 0x01, 0x09, 0x06,     0x04},     // ASCII 0x33 ( 51) - 3
  {0x01, 0x03, 0x05, 0x09, 0x0F, 0x01, 0x01,     0x04},     // ASCII 0x34 ( 52) - 4
  {0x0F, 0x08, 0x0E, 0x01, 0x01, 0x09, 0x06,     0x04},     // ASCII 0x35 ( 53) - 5
  {0x02, 0x04, 0x08, 0x0E, 0x09, 0x09, 0x06,     0x04},     // ASCII 0x36 ( 54) - 6
  {0x0F, 0x09, 0x01, 0x02, 0x02, 0x04, 0x04,     0x04},     // ASCII 0x37 ( 55) - 7
  {0x06, 0x09, 0x09, 0x06, 0x09, 0x09, 0x06,     0x04},     // ASCII 0x38 ( 56) - 8
  {0x06, 0x09, 0x09, 0x07, 0x01, 0x02, 0x04,     0x04},     // ASCII 0x39 ( 57) - 9
  {0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,     0x01},     // ASCII 0x3A ( 58) - : (slim version)
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03,     0x02},     // ASCII 0x3B ( 59) - ;
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x3C ( 60) - <
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,     0x04},     // ASCII 0x3D ( 61) - =
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x3E ( 62) - >
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x3F ( 63) - ?
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x40 ( 64) - @
  {0x06, 0x09, 0x09, 0x0F, 0x09, 0x09, 0x09,     0x04},     // ASCII 0x41 ( 65) - A
  {0x0E, 0x09, 0x09, 0x0E, 0x09, 0x09, 0x0E,     0x04},     // ASCII 0x42 ( 66) - B
  {0x06, 0x09, 0x08, 0x08, 0x08, 0x09, 0x06,     0x04},     // ASCII 0x43 ( 67) - C
  {0x0E, 0x09, 0x09, 0x09, 0x09, 0x09, 0x0E,     0x04},     // ASCII 0x44 ( 68) - D
  {0x0F, 0x08, 0x08, 0x0E, 0x08, 0x08, 0x0F,     0x04},     // ASCII 0x45 ( 69) - E
  {0x0F, 0x08, 0x08, 0x0E, 0x08, 0x08, 0x08,     0x04},     // ASCII 0x46 ( 70) - F
  {0x06, 0x09, 0x08, 0x08, 0x0B, 0x09, 0x06,     0x04},     // ASCII 0x47 ( 71) - G
  {0x09, 0x09, 0x09, 0x0F, 0x09, 0x09, 0x09,     0x04},     // ASCII 0x48 ( 72) - H
  {0x07, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07,     0x03},     // ASCII 0x49 ( 73) - I
  {0x07, 0x02, 0x02, 0x02, 0x02, 0x0A, 0x04,     0x04},     // ASCII 0x4A ( 74) - J
  {0x09, 0x09, 0x0A, 0x0C, 0x0A, 0x09, 0x09,     0x04},     // ASCII 0x4B ( 75) - K
  {0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0F,     0x04},     // ASCII 0x4C ( 76) - L
  {0x09, 0x0F, 0x0F, 0x09, 0x09, 0x09, 0x09,     0x04},     // ASCII 0x4D ( 77) - M
  {0x09, 0x09, 0x0D, 0x0B, 0x09, 0x09, 0x09,     0x04},     // ASCII 0x4E ( 78) - N
  {0x06, 0x09, 0x09, 0x09, 0x09, 0x09, 0x06,     0x04},     // ASCII 0x4F ( 79) - O
  {0x0E, 0x09, 0x09, 0x0E, 0x08, 0x08, 0x08,     0x04},     // ASCII 0x50 ( 80) - P
  {0x06, 0x09, 0x09, 0x09, 0x09, 0x0A, 0x05,     0x04},     // ASCII 0x51 ( 81) - Q
  {0x0E, 0x09, 0x09, 0x0E, 0x09, 0x09, 0x09,     0x04},     // ASCII 0x52 ( 82) - R
  {0x06, 0x09, 0x08, 0x06, 0x01, 0x09, 0x06,     0x04},     // ASCII 0x53 ( 83) - S
  {0x07, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,     0x03},     // ASCII 0x54 ( 84) - T
  {0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x06,     0x04},     // ASCII 0x55 ( 85) - U
  {0x11, 0x11, 0x11, 0x11, 0x0A, 0x0A, 0x04,     0x05},     // ASCII 0x56 ( 86) - V
  {0x09, 0x09, 0x09, 0x09, 0x0F, 0x0F, 0x09,     0x04},     // ASCII 0x57 ( 87) - W
  {0x09, 0x09, 0x06, 0x06, 0x06, 0x09, 0x09,     0x04},     // ASCII 0x58 ( 88) - X
  {0x09, 0x09, 0x09, 0x06, 0x06, 0x06, 0x06,     0x04},     // ASCII 0x59 ( 89) - Y
  {0x0F, 0x01, 0x02, 0x02, 0x04, 0x08, 0x0F,     0x04},     // ASCII 0x5A ( 90) - Z
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     0x04},     // ASCII 0x5B ( 91) - [
  {0x00, 0x03, 0x03, 0x00, 0x03, 0x03, 0x00,     0x04},     // ASCII 0x5C ( 92) - \
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x5D ( 93) - ]
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x5E ( 94) - ^
  {0x06, 0x09, 0x01, 0x02, 0x02, 0x00, 0x02,     0x04},     // ASCII 0x5F ( 95) - _
  {0x11, 0x11, 0x11, 0x11, 0x11, 0x0A, 0x04,     0x04},     // ASCII 0x60 ( 96) - `
  {0x01, 0x0C, 0x12, 0x02, 0x02, 0x12, 0x0C,     0x04},     // ASCII 0x61 ( 97) - a
  {0x01, 0x1E, 0x02, 0x1E, 0x02, 0x02, 0x02,     0x04},     // ASCII 0x62 ( 98) - b
  {0x01, 0x0C, 0x12, 0x02, 0x02, 0x12, 0x0C,     0x04},     // ASCII 0x63 ( 99) - c
  {0x11, 0x11, 0x11, 0x15, 0x15, 0x1B, 0x11,     0x04},     // ASCII 0x64 (100) - d
  {0x0F, 0x09, 0x09, 0x09, 0x09, 0x09, 0x0F,     0x04},     // ASCII 0x65 (101) - e
  {0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,     0x04},     // ASCII 0x66 (102) - f
  {0x0F, 0x08, 0x08, 0x0F, 0x01, 0x01, 0x0F,     0x04},     // ASCII 0x67 (103) - g
  {0x0F, 0x08, 0x08, 0x0F, 0x08, 0x08, 0x0F,     0x04},     // ASCII 0x68 (104) - h
  {0x09, 0x09, 0x09, 0x0F, 0x08, 0x08, 0x08,     0x04},     // ASCII 0x69 (105) - i
  {0x0F, 0x01, 0x01, 0x0F, 0x08, 0x08, 0x0F,     0x04},     // ASCII 0x6A (106) - j
  {0x0F, 0x01, 0x01, 0x0F, 0x09, 0x09, 0x0F,     0x04},     // ASCII 0x6B (107) - k
  {0x0F, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,     0x04},     // ASCII 0x6C (108) - l
  {0x0F, 0x09, 0x09, 0x0F, 0x09, 0x09, 0x0F,     0x04},     // ASCII 0x6D (109) - m
  {0x0F, 0x09, 0x09, 0x0F, 0x08, 0x08, 0x0F,     0x04},     // ASCII 0x6E (110) - n
  {0x0F, 0x09, 0x09, 0x0F, 0x09, 0x09, 0x09,     0x04},     // ASCII 0x6F (111) - o
  {0x01, 0x01, 0x01, 0x0F, 0x09, 0x09, 0x0F,     0x04},     // ASCII 0x70 (112) - p
  {0x0F, 0x01, 0x01, 0x01, 0x01, 0x01, 0x0F,     0x04},     // ASCII 0x71 (113) - q
  {0x08, 0x08, 0x08, 0x0F, 0x09, 0x09, 0x0F,     0x04},     // ASCII 0x72 (114) - r
  {0x0F, 0x01, 0x01, 0x0F, 0x01, 0x01, 0x0F,     0x04},     // ASCII 0x73 (115) - s
  {0x0F, 0x01, 0x01, 0x0F, 0x01, 0x01, 0x01,     0x04},     // ASCII 0x74 (116) - t
  {0x09, 0x09, 0x09, 0x0F, 0x09, 0x09, 0x09,     0x04},     // ASCII 0x75 (117) - u
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x0F,     0x04},     // ASCII 0x76 (118) - v
  {0x0F, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09,     0x04},     // ASCII 0x77 (119) - w
  {0x0F, 0x09, 0x09, 0x0F, 0x01, 0x01, 0x01,     0x04},     // ASCII 0x78 (120) - x
  {0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x0F,     0x04},     // ASCII 0x79 (121) - y
  {0x00, 0x03, 0x03, 0x00, 0x03, 0x03, 0x00,     0x04},     // ASCII 0x7A (122) - z
  {0x01, 0x1E, 0x02, 0x02, 0x02, 0x02, 0x1E,     0x04},     // ASCII 0x7B (123) - {
  {0x01, 0x1E, 0x02, 0x1E, 0x02, 0x02, 0x02,     0x04},     // ASCII 0x7C (124) - |
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     0x04},     // ASCII 0x7D (125) - }
  {0x1F, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,     0x04},     // ASCII 0x7E (126) - ~
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,     0x04},     // ASCII 0x7F (127) - ?
};





/* --------------------------------------------------------------------------------------------------------------------------- *\
                                               5 X 7 variable-width character set.
   NOTE: Characters are defined row by row, (rows 0 to 7, from top to bottom) Columns 0 to 4 (bitmap from left to right),
         then character width without any blank pixel column before or after the character.

   NOTE: ASCII character below 0x20 are reserved for foreign character definitions. This area should be used instead of
         0x80 and above.

   NOTE: ASCII characters 0x80 and above are reserved for now (possibly for future basic graphics usage). If one of these ASCII
         characters is displayed, a <?> will be shown instead.

   IMPORTANT: Every character must be right-aligned in the bitmap.
\* --------------------------------------------------------------------------------------------------------------------------- */
const struct font5x7 Font5x7[256] =
{
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x00 (  0) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x01 (  1) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x02 (  2) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x03 (  3) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x04 (  4) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x05 (  5) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x06 (  6) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x07 (  7) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x08 (  8) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x09 (  9) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x0A ( 10) - ?
  {0x02, 0x04, 0x0E, 0x01, 0x0F, 0x11, 0x0F,     0x05},  // ASCII 0x0B ( 11) - a acute
  {0x04, 0x02, 0x0E, 0x01, 0x0F, 0x11, 0x0F,     0x05},  // ASCII 0x0C ( 12) - a grave
  {0x04, 0x0A, 0x0E, 0x01, 0x0F, 0x11, 0x0F,     0x05},  // ASCII 0x0D ( 13) - a circumflex
  {0x0A, 0x04, 0x0E, 0x10, 0x10, 0x10, 0x0E,     0x05},  // ASCII 0x0E ( 14) - c caron
  {0x02, 0x04, 0x0E, 0x11, 0x1F, 0x10, 0x0E,     0x05},  // ASCII 0x0F ( 15) - e acute
  {0x08, 0x04, 0x0E, 0x11, 0x1F, 0x10, 0x0E,     0x05},  // ASCII 0x10 ( 16) - e grave
  {0x04, 0x0A, 0x0E, 0x11, 0x1F, 0x10, 0x0E,     0x05},  // ASCII 0x11 ( 17) - e circumflex
  {0x0A, 0x04, 0x0E, 0x11, 0x1F, 0x10, 0x0E,     0x05},  // ASCII 0x12 ( 18) - e caron
  {0x01, 0x02, 0x00, 0x06, 0x02, 0x02, 0x07,     0x03},  // ASCII 0x13 ( 19) - i acute
  {0x04, 0x02, 0x00, 0x06, 0x02, 0x02, 0x07,     0x03},  // ASCII 0x14 ( 20) - i grave
  {0x02, 0x05, 0x00, 0x06, 0x02, 0x02, 0x07,     0x03},  // ASCII 0x15 ( 21) - i circumflex
  {0x02, 0x04, 0x0E, 0x11, 0x11, 0x11, 0x0E,     0x05},  // ASCII 0x16 ( 22) - o acute
  {0x08, 0x04, 0x0E, 0x11, 0x11, 0x11, 0x0E,     0x05},  // ASCII 0x17 ( 23) - o grave
  {0x04, 0x0A, 0x0E, 0x11, 0x11, 0x11, 0x0E,     0x05},  // ASCII 0x18 ( 24) - o circumflex
  {0x0A, 0x04, 0x16, 0x19, 0x10, 0x10, 0x10,     0x05},  // ASCII 0x19 ( 25) - r caron
  {0x02, 0x04, 0x11, 0x11, 0x11, 0x13, 0x0D,     0x05},  // ASCII 0x1A ( 26) - u acute
  {0x08, 0x04, 0x11, 0x11, 0x11, 0x13, 0x0D,     0x05},  // ASCII 0x1B ( 27) - u grave
  {0x04, 0x0A, 0x11, 0x11, 0x11, 0x13, 0x0D,     0x05},  // ASCII 0x1C ( 28) - u circumflex
  {0x00, 0x04, 0x11, 0x11, 0x11, 0x13, 0x0D,     0x05},  // ASCII 0x1D ( 29) - u ring
  {0x02, 0x04, 0x11, 0x11, 0x0F, 0x01, 0x0E,     0x05},  // ASCII 0x1E ( 30) - y acute
  {0x0A, 0x04, 0x1F, 0x02, 0x04, 0x08, 0x1F,     0x05},  // ASCII 0x1F ( 31) - z caron
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     0x02},  // ASCII 0x20 ( 32) - <space>
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01,     0x01},  // ASCII 0x21 ( 33) - !
  {0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00,     0x02},  // ASCII 0x22 ( 34) - "
  {0x0A, 0x0A, 0x1F, 0x0A, 0x1F, 0x0A, 0x0A,     0x05},  // ASCII 0x23 ( 35) - #
  {0x04, 0x0F, 0x14, 0x0E, 0x05, 0x1E, 0x04,     0x05},  // ASCII 0x24 ( 36) - $
  {0x18, 0x19, 0x02, 0x04, 0x08, 0x13, 0x03,     0x05},  // ASCII 0x25 ( 37) - %
  {0x0C, 0x12, 0x14, 0x08, 0x15, 0x12, 0x0D,     0x05},  // ASCII 0x26 ( 38) - &
  {0x03, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00,     0x02},  // ASCII 0x27 ( 39) - '
  {0x01, 0x02, 0x04, 0x04, 0x04, 0x02, 0x01,     0x03},  // ASCII 0x28 ( 40) - (
  {0x04, 0x02, 0x01, 0x01, 0x01, 0x02, 0x04,     0x03},  // ASCII 0x29 ( 41) - )
  {0x00, 0x04, 0x15, 0x0E, 0x15, 0x04, 0x00,     0x05},  // ASCII 0x2A ( 42) - *
  {0x00, 0x04, 0x04, 0x1F, 0x04, 0x04, 0x00,     0x05},  // ASCII 0x2B ( 43) - +
  {0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x02,     0x02},  // ASCII 0x2C ( 44) - ,
  {0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,     0x03},  // ASCII 0x2D ( 45) - -
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03,     0x02},  // ASCII 0x2E ( 46) - .
  {0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x00,     0x05},  // ASCII 0x2F ( 47) - /
  {0x0E, 0x11, 0x13, 0x15, 0x19, 0x11, 0x0E,     0x05},  // ASCII 0x30 ( 48) - 0
  {0x02, 0x06, 0x02, 0x02, 0x02, 0x02, 0x07,     0x03},  // ASCII 0x31 ( 49) - 1
  {0x0E, 0x11, 0x01, 0x06, 0x08, 0x10, 0x1F,     0x05},  // ASCII 0x32 ( 50) - 2
  {0x0E, 0x11, 0x01, 0x06, 0x01, 0x11, 0x0E,     0x05},  // ASCII 0x33 ( 51) - 3
  {0x02, 0x06, 0x0A, 0x12, 0x1F, 0x02, 0x02,     0x05},  // ASCII 0x34 ( 52) - 4
  {0x1F, 0x10, 0x1E, 0x01, 0x01, 0x11, 0x0E,     0x05},  // ASCII 0x35 ( 53) - 5
  {0x06, 0x08, 0x10, 0x1E, 0x11, 0x11, 0x0E,     0x05},  // ASCII 0x36 ( 54) - 6
  {0x1F, 0x01, 0x02, 0x04, 0x08, 0x08, 0x08,     0x05},  // ASCII 0x37 ( 55) - 7
  {0x0E, 0x11, 0x11, 0x0E, 0x11, 0x11, 0x0E,     0x05},  // ASCII 0x38 ( 56) - 8
  {0x0E, 0x11, 0x11, 0x0F, 0x01, 0x02, 0x0C,     0x05},  // ASCII 0x39 ( 57) - 9
  {0x00, 0x03, 0x03, 0x00, 0x03, 0x03, 0x00,     0x02},  // ASCII 0x3A ( 58) - :
  {0x00, 0x03, 0x03, 0x00, 0x03, 0x01, 0x02,     0x02},  // ASCII 0x3B ( 59) - ;
  {0x01, 0x02, 0x04, 0x08, 0x04, 0x02, 0x01,     0x04},  // ASCII 0x3C ( 60) - <
  {0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00,     0x05},  // ASCII 0x3D ( 61) - =
  {0x08, 0x04, 0x02, 0x01, 0x02, 0x04, 0x08,     0x04},  // ASCII 0x3E ( 62) - >
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x3F ( 63) - ?
  {0x0E, 0x11, 0x01, 0x0D, 0x15, 0x15, 0x0E,     0x05},  // ASCII 0x40 ( 64) - @
  {0x04, 0x0E, 0x11, 0x11, 0x1F, 0x11, 0x11,     0x05},  // ASCII 0x41 ( 65) - A
  {0x1E, 0x11, 0x11, 0x1E, 0x11, 0x11, 0x1E,     0x05},  // ASCII 0x42 ( 66) - B
  {0x0E, 0x11, 0x10, 0x10, 0x10, 0x11, 0x0E,     0x05},  // ASCII 0x43 ( 67) - C
  {0x1E, 0x09, 0x09, 0x09, 0x09, 0x09, 0x1E,     0x05},  // ASCII 0x44 ( 68) - D
  {0x1F, 0x10, 0x10, 0x1C, 0x10, 0x10, 0x1F,     0x05},  // ASCII 0x45 ( 69) - E
  {0x1F, 0x10, 0x10, 0x1C, 0x10, 0x10, 0x10,     0x05},  // ASCII 0x46 ( 70) - F
  {0x0E, 0x11, 0x10, 0x10, 0x13, 0x11, 0x0E,     0x05},  // ASCII 0x47 ( 71) - G
  {0x11, 0x11, 0x11, 0x1F, 0x11, 0x11, 0x11,     0x05},  // ASCII 0x48 ( 72) - H
  {0x07, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07,     0x03},  // ASCII 0x49 ( 73) - I
  {0x0F, 0x02, 0x02, 0x02, 0x02, 0x12, 0x0C,     0x05},  // ASCII 0x4A ( 74) - J
  {0x11, 0x12, 0x14, 0x18, 0x14, 0x12, 0x11,     0x05},  // ASCII 0x4B ( 75) - K
  {0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0F,     0x04},  // ASCII 0x4C ( 76) - L
  {0x11, 0x1B, 0x1B, 0x15, 0x15, 0x11, 0x11,     0x05},  // ASCII 0x4D ( 77) - M
  {0x11, 0x11, 0x19, 0x15, 0x13, 0x11, 0x11,     0x05},  // ASCII 0x4E ( 78) - N
  {0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E,     0x05},  // ASCII 0x4F ( 79) - O
  {0x1E, 0x11, 0x11, 0x1E, 0x10, 0x10, 0x10,     0x05},  // ASCII 0x50 ( 80) - P
  {0x0E, 0x11, 0x11, 0x11, 0x15, 0x12, 0x0D,     0x05},  // ASCII 0x51 ( 81) - Q
  {0x1E, 0x11, 0x11, 0x1E, 0x14, 0x12, 0x11,     0x05},  // ASCII 0x52 ( 82) - R
  {0x0E, 0x11, 0x10, 0x0E, 0x01, 0x11, 0x0E,     0x05},  // ASCII 0x53 ( 83) - S
  {0x1F, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,     0x05},  // ASCII 0x54 ( 84) - T
  {0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E,     0x05},  // ASCII 0x55 ( 85) - U
  {0x11, 0x11, 0x11, 0x11, 0x0A, 0x0A, 0x04,     0x05},  // ASCII 0x56 ( 86) - V
  {0x11, 0x11, 0x11, 0x15, 0x15, 0x1B, 0x11,     0x05},  // ASCII 0x57 ( 87) - W
  {0x11, 0x11, 0x0A, 0x04, 0x0A, 0x11, 0x11,     0x05},  // ASCII 0x58 ( 88) - X
  {0x11, 0x11, 0x11, 0x0A, 0x04, 0x04, 0x04,     0x05},  // ASCII 0x59 ( 89) - Y
  {0x1F, 0x01, 0x02, 0x04, 0x08, 0x10, 0x1F,     0x05},  // ASCII 0x5A ( 90) - Z
  {0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x07,     0x03},  // ASCII 0x5B ( 91) - [
  {0x00, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00,     0x05},  // ASCII 0x5C ( 92) - <back-slash>
  {0x07, 0x01, 0x01, 0x01, 0x01, 0x01, 0x07,     0x03},  // ASCII 0x5D ( 93) - ]
  {0x04, 0x0A, 0x11, 0x00, 0x00, 0x00, 0x00,     0x05},  // ASCII 0x5E ( 94) - ^
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,     0x05},  // ASCII 0x5F ( 95) - _
  {0x01, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00,     0x03},  // ASCII 0x60 ( 96) - '
  {0x00, 0x00, 0x0E, 0x01, 0x0F, 0x11, 0x0F,     0x05},  // ASCII 0x61 ( 97) - a
  {0x10, 0x10, 0x16, 0x19, 0x11, 0x11, 0x0E,     0x05},  // ASCII 0x62 ( 98) - b
  {0x00, 0x00, 0x07, 0x08, 0x08, 0x08, 0x07,     0x04},  // ASCII 0x63 ( 99) - c
  {0x01, 0x01, 0x0D, 0x13, 0x11, 0x11, 0x0E,     0x05},  // ASCII 0x64 (100) - d
  {0x00, 0x00, 0x0E, 0x11, 0x1F, 0x10, 0x0E,     0x05},  // ASCII 0x65 (101) - e
  {0x06, 0x09, 0x08, 0x1C, 0x08, 0x08, 0x08,     0x05},  // ASCII 0x66 (102) - f
  {0x00, 0x00, 0x0F, 0x11, 0x0F, 0x01, 0x0E,     0x05},  // ASCII 0x67 (103) - g
  {0x10, 0x10, 0x16, 0x19, 0x11, 0x11, 0x11,     0x05},  // ASCII 0x68 (104) - h
  {0x02, 0x00, 0x02, 0x06, 0x02, 0x02, 0x07,     0x03},  // ASCII 0x69 (105) - i
  {0x01, 0x00, 0x03, 0x01, 0x01, 0x09, 0x06,     0x04},  // ASCII 0x6A (106) - j
  {0x08, 0x08, 0x09, 0x0A, 0x0C, 0x0A, 0x09,     0x04},  // ASCII 0x6B (107) - k
  {0x06, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07,     0x03},  // ASCII 0x6C (108) - l
  {0x00, 0x00, 0x1A, 0x15, 0x15, 0x15, 0x15,     0x05},  // ASCII 0x6D (109) - m
  {0x00, 0x00, 0x16, 0x19, 0x11, 0x11, 0x11,     0x05},  // ASCII 0x6E (110) - n
  {0x00, 0x00, 0x0E, 0x11, 0x11, 0x11, 0x0E,     0x05},  // ASCII 0x6F (111) - o
  {0x00, 0x00, 0x1E, 0x11, 0x1E, 0x10, 0x10,     0x05},  // ASCII 0x70 (112) - p
  {0x00, 0x00, 0x0D, 0x13, 0x0F, 0x01, 0x01,     0x05},  // ASCII 0x71 (113) - q
  {0x00, 0x00, 0x16, 0x19, 0x10, 0x10, 0x10,     0x05},  // ASCII 0x72 (114) - r
  {0x00, 0x00, 0x0E, 0x10, 0x0E, 0x01, 0x1E,     0x05},  // ASCII 0x73 (115) - s
  {0x08, 0x08, 0x1C, 0x08, 0x08, 0x09, 0x06,     0x05},  // ASCII 0x74 (116) - t
  {0x00, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0D,     0x05},  // ASCII 0x75 (117) - u
  {0x00, 0x00, 0x11, 0x11, 0x11, 0x0A, 0x04,     0x05},  // ASCII 0x76 (118) - v
  {0x00, 0x00, 0x11, 0x11, 0x15, 0x15, 0x0A,     0x05},  // ASCII 0x77 (119) - w
  {0x00, 0x00, 0x11, 0x0A, 0x04, 0x0A, 0x11,     0x05},  // ASCII 0x78 (120) - x
  {0x00, 0x00, 0x11, 0x11, 0x0F, 0x01, 0x0E,     0x05},  // ASCII 0x79 (121) - y
  {0x00, 0x00, 0x1F, 0x02, 0x04, 0x08, 0x1F,     0x05},  // ASCII 0x7A (122) - z
  {0x01, 0x02, 0x02, 0x04, 0x02, 0x02, 0x01,     0x03},  // ASCII 0x7B (123) - {
  {0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,     0x01},  // ASCII 0x7C (124) - |
  {0x04, 0x02, 0x02, 0x01, 0x02, 0x02, 0x04,     0x03},  // ASCII 0x7D (125) - }
  {0x14, 0x0A, 0x05, 0x00, 0x00, 0x00, 0x00,     0x05},  // ASCII 0x7E (126) - <open double quote>
  {0x05, 0x0A, 0x14, 0x00, 0x00, 0x00, 0x00,     0x05},  // ASCII 0x7F (127) - <close double quote>
  {0x02, 0x05, 0x02, 0x00, 0x00, 0x00, 0x00,     0x03},  // ASCII 0x80 (128) - <symbol for degree>
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x81 (129) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x82 (130) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x83 (131) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x84 (132) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x85 (133) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x86 (134) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x87 (135) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x88 (136) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x89 (137) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x8A (138) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x8B (139) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x8C (140) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x8D (141) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x8E (142) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x8F (143) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x90 (144) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x91 (145) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x92 (146) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x93 (147) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x94 (148) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x95 (149) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x96 (150) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x97 (151) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x98 (152) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x99 (153) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x9A (154) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x9B (155) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x9C (156) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x9D (157) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x9E (158) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0x9F (159) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xA0 (160) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xA1 (161) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xA2 (162) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xA3 (163) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xA4 (164) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xA5 (165) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xA6 (166) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xA7 (167) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xA8 (168) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xA9 (169) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xAA (170) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xAB (171) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xAC (172) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xAD (173) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xAE (174) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xAF (175) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xB0 (176) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xB1 (177) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xB2 (178) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xB3 (179) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xB4 (180) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xB5 (181) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xB6 (182) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xB7 (183) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xB8 (184) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xB9 (185) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xBA (186) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xBB (187) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xBC (188) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xBD (189) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xBE (190) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xBF (191) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xC0 (192) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xC1 (193) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xC2 (194) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xC3 (195) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xC4 (196) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xC5 (197) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xC6 (198) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xC7 (199) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xC8 (200) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xC9 (201) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xCA (202) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xCB (203) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xCC (204) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xCD (205) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xCE (206) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xCF (207) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xD0 (208) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xD1 (209) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xD2 (210) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xD3 (211) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xD4 (212) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xD5 (213) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xD6 (214) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xD7 (215) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xD8 (216) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xD9 (217) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xDA (218) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xDB (219) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xDC (220) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xDD (221) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xDE (222) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xDF (223) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xE0 (224) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xE1 (225) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xE2 (226) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xE3 (227) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xE4 (228) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xE5 (229) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xE6 (230) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xE7 (231) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xE8 (232) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xE9 (233) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xEA (234) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xEB (235) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xEC (236) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xED (237) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xEE (238) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xEF (239) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xF0 (240) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xF1 (241) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xF2 (242) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xF3 (243) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xF4 (244) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xF5 (245) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xF6 (246) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xF7 (247) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xF8 (248) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xF9 (249) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xFA (250) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xFB (251) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xFC (252) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xFD (253) - ?
  {0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04,     0x05},  // ASCII 0xFE (254) - ?
  {0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x00,     0x05},  // ASCII 0xFF (255) - </> indicate end of ASCII table
};





/* --------------------------------------------------------------------------------------------------------------------------- *\
                                               8 X 10 variable-width character set.
   NOTE: Characters are defined row by row, (rows 0 to 9, from top to bottom) Columns 0 to 7 (bitmap from left to right),
         then character width without any blank pixel column before or after the character.

   NOTE: ASCII characters below 0x20 are reserved for foreign languages.

   NOTE: Only numbers and <:> (double-dots are defined for now).

   NOTE: Even if this character set is theoretically "variable character-width", it is used mainly to display time on the
         RGB matrix. The visual effect of having the clock slightly switching to the right or to the left is very ennoying.
         For this reason, the character set is used as a "fixed width" of 8 (only the digit <1> is narrower but it is kept
         with a width of 8 for the reason mentioned above).

   IMPORTANT: Every character must be right-aligned in the bitmap.
\* --------------------------------------------------------------------------------------------------------------------------- */
const struct font8x10 Font8x10[128] =
{
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x00 (  0) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x01 (  1) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x02 (  2) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x03 (  3) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x04 (  4) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x05 (  5) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x06 (  6) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x07 (  7) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x08 (  8) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x09 (  9) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x0A ( 10) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x0B ( 11) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x0C ( 12) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x0D ( 13) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x0E ( 14) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x0F ( 15) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x10 ( 16) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x11 ( 17) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x12 ( 18) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x13 ( 19) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x14 ( 20) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x15 ( 21) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x16 ( 22) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x17 ( 23) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x18 ( 24) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x19 ( 25) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x1A ( 26) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x1B ( 27) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x1C ( 28) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x1D ( 29) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x1E ( 30) - ?
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x1F ( 31) - ?
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x02},  // ASCII 0x20 ( 32) - <space> ***
  {0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x03, 0x03,   0x02},  // ASCII 0x21 ( 33) - !  ***
  {0x1B, 0x1B, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x06},  // ASCII 0x22 ( 34) - "  ***
  {0x36, 0x36, 0x7F, 0x7F, 0x36, 0x36, 0x7F, 0x7F, 0x36, 0x36,   0x07},  // ASCII 0x23 ( 35) - #  ***
  {0x08, 0x3E, 0x63, 0x68, 0x38, 0x0F, 0x0B, 0x4B, 0x3E, 0x08,   0x07},  // ASCII 0x24 ( 36) - $  ***
  {0x73, 0x56, 0x76, 0x0C, 0x0C, 0x18, 0x18, 0x37, 0x35, 0x67,   0x07},  // ASCII 0x25 ( 37) - %  ***
  {0x0D, 0x1B, 0x1B, 0x0E, 0x0C, 0x1D, 0x37, 0x36, 0x3F, 0x1C,   0x06},  // ASCII 0x26 ( 38) - &  ***
  {0x03, 0x03, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x03},  // ASCII 0x27 ( 39) - '  ***
  {0x03, 0x06, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x06, 0x03,   0x04},  // ASCII 0x28 ( 40) - (  ***
  {0x0C, 0x06, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x06, 0x0C,   0x04},  // ASCII 0x29 ( 41) - )  ***
  /// {0x63, 0x36, 0x1C, 0x1C, 0x7F, 0x7F, 0x1C, 0x1C, 0x36, 0x63,   0x07},  // ASCII 0x2A ( 42) - <star>  ***
  {0x21, 0x12, 0x0C, 0x3F, 0x0C, 0x0C, 0x3F, 0x0C, 0x12, 0x21,   0x07},  // ASCII 0x2A ( 42) - <star>  ***
  {0x00, 0x00, 0x0C, 0x0C, 0x3F, 0x3F, 0x0C, 0x0C, 0x00, 0x00,   0x06},  // ASCII 0x2B ( 43) - +  ***
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x06,   0x03},  // ASCII 0x2C ( 44) - ,  ***
  {0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00,   0x04},  // ASCII 0x2D ( 45) - -  ***
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03,   0x02},  // ASCII 0x2E ( 46) - .  ***
  {0x03, 0x03, 0x06, 0x06, 0x0C, 0x18, 0x30, 0x30, 0x60, 0x60,   0x07},  // ASCII 0x2F ( 47) - /  ***
  {0x1C, 0x3E, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x3E, 0X1C,   0x07},  // ASCII 0x30 ( 48) - 0  ***
  {0x0C, 0x1C, 0x3C, 0x2C, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x3F,   0x07},  // ASCII 0x31 ( 49) - 1  ***
  {0x3E, 0x7F, 0x43, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x7F, 0x7F,   0x07},  // ASCII 0x32 ( 50) - 2  ***
  {0x3C, 0x7E, 0x43, 0x03, 0x0E, 0x0E, 0x03, 0x43, 0x7E, 0x3C,   0x07},  // ASCII 0x33 ( 51) - 3  ***
  {0x03, 0x07, 0x0F, 0x1B, 0x33, 0x63, 0x7F, 0x7F, 0x03, 0x03,   0x07},  // ASCII 0x34 ( 52) - 4  ***
  {0x7F, 0x7F, 0x60, 0x7C, 0x7E, 0x03, 0x03, 0x43, 0x7E, 0x3C,   0x07},  // ASCII 0x35 ( 53) - 5  ***
  {0x06, 0x0C, 0x18, 0x30, 0x7C, 0x7E, 0x63, 0x63, 0x3E, 0x1C,   0x07},  // ASCII 0x36 ( 54) - 6  ***
  {0x7F, 0x7F, 0x06, 0x06, 0x0C, 0x0C, 0x18, 0x18, 0x30, 0x30,   0x07},  // ASCII 0x37 ( 55) - 7  ***
  {0x1C, 0x3E, 0x63, 0x63, 0x3E, 0x3E, 0x63, 0x63, 0x3E, 0x1C,   0x07},  // ASCII 0x38 ( 56) - 8  ***
  {0x1C, 0x3E, 0x63, 0x63, 0x3F, 0x1F, 0x06, 0x0C, 0x18, 0x30,   0x07},  // ASCII 0x39 ( 57) - 9  ***
  {0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,   0x02},  // ASCII 0x3A ( 58) - :  ***
  {0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x03, 0x03, 0x06,   0x03},  // ASCII 0x3B ( 59) - ;  ***
  {0x03, 0x06, 0x0C, 0x18, 0x30, 0x30, 0x18, 0x0C, 0x06, 0x03,   0x06},  // ASCII 0x3C ( 60) - <  ***
  {0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00,   0x04},  // ASCII 0x3D ( 61) - =  ***
  {0x30, 0x18, 0x0C, 0x06, 0x03, 0x03, 0x06, 0x0C, 0x18, 0x30,   0x06},  // ASCII 0x3E ( 62) - >  ***
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x3F ( 63) - ?  ***
  {0x1C, 0x36, 0x63, 0x41, 0x5D, 0x55, 0x5F, 0x60, 0x33, 0x1E,   0x07},  // ASCII 0x40 ( 64) - @  ***
  {0x1C, 0x3E, 0x63, 0x63, 0x7F, 0x7F, 0x63, 0x63, 0x63, 0x63,   0x07},  // ASCII 0x41 ( 65) - A  ***
  {0x7C, 0x7E, 0x63, 0x63, 0x7E, 0x7E, 0x63, 0x63, 0x7E, 0x7C,   0x07},  // ASCII 0x42 ( 66) - B  ***
  {0x1F, 0x3F, 0x70, 0x60, 0x60, 0x60, 0x60, 0x70, 0x3F, 0x1F,   0x07},  // ASCII 0x43 ( 67) - C  ***
  {0x7C, 0x7E, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x7E, 0x7C,   0x07},  // ASCII 0x44 ( 68) - D  ***
  {0x7F, 0x7F, 0x60, 0x60, 0x7E, 0x7E, 0x60, 0x60, 0x7F, 0x7F,   0x07},  // ASCII 0x45 ( 69) - E  ***
  {0x7F, 0x7F, 0x60, 0x7E, 0x7E, 0x60, 0x60, 0x60, 0x60, 0x60,   0x07},  // ASCII 0x46 ( 70) - F  ***
  {0x1E, 0x3E, 0x60, 0x60, 0x60, 0x67, 0x67, 0x73, 0x3E, 0x1C,   0x07},  // ASCII 0x47 ( 71) - G  ***
  {0x63, 0x63, 0x63, 0x63, 0x7F, 0x7F, 0x63, 0x63, 0x63, 0x63,   0x07},  // ASCII 0x48 ( 72) - H  ***
  {0x0F, 0x0F, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x0F, 0x0F,   0x04},  // ASCII 0x49 ( 73) - I  ***
  {0x0F, 0x0F, 0x06, 0x06, 0x06, 0x06, 0x66, 0x66, 0x3E, 0x1C,   0x07},  // ASCII 0x4A ( 74) - J  ***
  {0x63, 0x66, 0x6C, 0x78, 0x70, 0x70, 0x78, 0x6C, 0x66, 0x63,   0x07},  // ASCII 0x4B ( 75) - K  ***
  {0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x7F, 0x7F,   0x07},  // ASCII 0x4C ( 76) - L  ***
  {0x63, 0x77, 0x7F, 0x6B, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63,   0x07},  // ASCII 0x4D ( 77) - M  ***
  {0x43, 0x63, 0x73, 0x7B, 0x7B, 0x6F, 0x67, 0x67, 0x63, 0x61,   0x07},  // ASCII 0x4E ( 78) - N  ***
  {0x1C, 0x3E, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x3E, 0x1C,   0x07},  // ASCII 0x4F ( 79) - O  ***
  {0x7C, 0x7E, 0x63, 0x63, 0x7E, 0x7C, 0x60, 0x60, 0x60, 0x60,   0x07},  // ASCII 0x50 ( 80) - P  ***
  {0x1C, 0x3E, 0x63, 0x63, 0x63, 0x63, 0x6B, 0x67, 0x3E, 0x1D,   0x07},  // ASCII 0x51 ( 81) - Q  ***
  {0x7E, 0x7F, 0x63, 0x63, 0x7E, 0x7C, 0x78, 0x6C, 0x66, 0x63,   0x07},  // ASCII 0x52 ( 82) - R  ***
  {0x3F, 0x7F, 0x60, 0x60, 0x7E, 0x3F, 0x03, 0x03, 0x7F, 0x7E,   0x07},  // ASCII 0x53 ( 83) - S  ***
  {0x3F, 0x3F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,   0x06},  // ASCII 0x54 ( 84) - T  ***
  {0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x3E, 0x1C,   0x07},  // ASCII 0x55 ( 85) - U  ***
  {0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x08,   0x07},  // ASCII 0x56 ( 86) - V  ***
  {0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63,   0x07},  // ASCII 0x57 ( 87) - W  ***
  {0x63, 0x63, 0x63, 0x3E, 0x1C, 0x1C, 0x3E, 0x63, 0x63, 0x63,   0x07},  // ASCII 0x58 ( 88) - X  ***
  {0x33, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,   0x06},  // ASCII 0x59 ( 89) - Y  ***
  {0x7F, 0x7F, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x7F, 0x7F,   0x07},  // ASCII 0x5A ( 90) - Z  ***
  {0x0F, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0F, 0x0F,   0x04},  // ASCII 0x5B ( 91) - [  ***
  {0x60, 0x60, 0x30, 0x30, 0x18, 0x0C, 0x06, 0x06, 0x03, 0x03,   0x07},  // ASCII 0x5C ( 92) - <back-slash>  ***
  {0x0F, 0x0F, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x0F, 0x0F,   0x04},  // ASCII 0x5D ( 93) - ]  ***
  {0x08, 0x1C, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x06},  // ASCII 0x5E ( 94) - ^  ***
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F,   0x06},  // ASCII 0x5F ( 95) - _  ***
  {0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x02},  // ASCII 0x60 ( 96) - '  ***
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x61 ( 97) - a
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x62 ( 98) - b
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x63 ( 99) - c
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x64 (100) - d
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x65 (101) - e
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x66 (102) - f
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x67 (103) - g
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x68 (104) - h
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x69 (105) - i
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x6A (106) - j
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x6B (107) - k
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x6C (108) - l
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x6D (109) - m
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x6E (110) - n
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x6F (111) - o
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x70 (112) - p
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x71 (113) - q
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x72 (114) - r
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x73 (115) - s
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x74 (116) - t
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x75 (117) - u
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x76 (118) - v
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x77 (119) - w
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x78 (120) - x
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x79 (121) - y
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x7A (122) - z
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x7B (123) - {
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x7C (124) - |
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x7D (125) - }
  {0x1C, 0x3E, 0x63, 0x63, 0x06, 0x0C, 0x0C, 0x00, 0x0C, 0x0C,   0x07},  // ASCII 0x7E (126) - <open double quote>
  {0x00, 0x00, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x00, 0x00,   0x07},  // ASCII 0x7F (127) - <back-slash>
};








#if 0
/* Font 4x7 below ??? */
const unsigned char DISPdat4X7[128][7] =
{
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*" ",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"	",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*" ",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*" ",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x0E,0x02,0x02,0x02,0x0E,0x00},/*"",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*"",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*" ",0*/
	{0x00,0x04,0x04,0x04,0x00,0x04,0x00},/*"!",0*/
	{0x02,0x04,0x00,0x00,0x00,0x00,0x00},/*""",0*/
	{0x00,0x00,0x0F,0x06,0x0F,0x04,0x00},/*"#",0*/
	{0x00,0x06,0x02,0x04,0x04,0x06,0x00},/*"$",0*/
	{0x00,0x03,0x07,0x07,0x0E,0x0C,0x00},/*"%",0*/
	{0x00,0x02,0x05,0x06,0x07,0x0F,0x00},/*"&",0*/
	{0x00,0x02,0x00,0x00,0x00,0x00,0x00},/*"'",0*/
	{0x08,0x04,0x04,0x04,0x04,0x04,0x08},/*"(",0*/
	{0x01,0x02,0x02,0x02,0x02,0x02,0x01},/*")",0*/
	{0x08,0x2A,0x1C,0x1C,0x2A,0x08,0x00},/*"*",0*/
	{0x00,0x00,0x00,0x0F,0x00,0x00,0x00},/*"+",0*/
	{0x00,0x00,0x00,0x00,0x00,0x02,0x01},/*",",0*/
	{0x00,0x00,0x00,0x03,0x00,0x00,0x00},/*"-",0*/
	{0x00,0x00,0x00,0x00,0x00,0x02,0x00},/*".",0*/
	{0x00,0x08,0x04,0x02,0x02,0x01,0x01},/*"/",0*/
	{0x06,0x09,0x09,0x09,0x09,0x09,0x06},/*"0",0*/
  {0x04,0x06,0x04,0x04,0x04,0x04,0x0E},/*"1",0*/
	{0x06,0x09,0x08,0x04,0x02,0x01,0x0F},/*"2",0*/
  {0x06,0x09,0x08,0x06,0x08,0x09,0x06},/*"3",0*/
	{0x08,0x0C,0x0A,0x09,0x0F,0x08,0x08},/*"4",0*/
  {0x0F,0x01,0x07,0x08,0x08,0x09,0x06},/*"5",0*/
	{0x04,0x02,0x01,0x07,0x09,0x09,0x06},/*"6",0*/
  {0x0F,0x09,0x04,0x04,0x04,0x04,0x04},/*"7",0*/
  {0x06,0x09,0x09,0x06,0x09,0x09,0x06},/*"8",0*/
  {0x06,0x09,0x09,0x0E,0x08,0x04,0x02},/*"9",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00},/*":",0*/
	{0x00,0x00,0x00,0x00,0x00,0x04,0x04},/*";",0*/
	{0x00,0x04,0x02,0x01,0x02,0x04,0x00},/*"<",0*/
	{0x00,0x00,0x00,0x06,0x00,0x00,0x00},/*"=",0*/
	{0x00,0x02,0x04,0x08,0x04,0x02,0x00},/*">",0*/
	{0x00,0x06,0x09,0x04,0x02,0x02,0x00},/*"?",0*/
	{0x00,0x06,0x0B,0x0F,0x07,0x0E,0x00},/*"@",0*/
	{0x06,0x09,0x09,0x0F,0x09,0x09,0x09},/*"A",0*/
	{0x07,0x09,0x09,0x07,0x09,0x09,0x07},/*"B",0*/
	{0x06,0x09,0x01,0x01,0x01,0x09,0x06},/*"C",0*/
	{0x07,0x09,0x09,0x09,0x09,0x09,0x07},/*"D",0*/
	{0x0F,0x01,0x01,0x0F,0x01,0x01,0x0F},/*"E",0*/
	{0x0F,0x01,0x01,0x0F,0x01,0x01,0x01},/*"F",0*/
	{0x06,0x01,0x01,0x01,0x01,0x09,0x0E},/*"G",0*/
	{0x09,0x09,0x09,0x0F,0x09,0x09,0x09},/*"H",0*/
	{0x0E,0x04,0x04,0x04,0x04,0x04,0x0E},/*"I",0*/
	{0x00,0x04,0x04,0x04,0x04,0x04,0x07},/*"J",0*/
	{0x00,0x07,0x05,0x02,0x05,0x0F,0x00},/*"K",0*/
	{0x01,0x01,0x01,0x01,0x01,0x01,0x0F},/*"L",0*/
	{0x11,0x1B,0x15,0x11,0x11,0x11,0x11},/*"M",0*/
	{0x09,0x09,0x0B,0x0D,0x09,0x09,0x09},/*"N",0*/
	{0x06,0x09,0x09,0x09,0x09,0x09,0x06},/*"O",0*/
	{0x07,0x09,0x09,0x07,0x01,0x01,0x01},/*"P",0*/
	{0x00,0x06,0x09,0x09,0x09,0x06,0x00},/*"Q",0*/
	{0x07,0x09,0x09,0x07,0x05,0x09,0x09},/*"R",0*/
	{0x1F,0x11,0x01,0x0E,0x10,0x10,0x0F},/*"S",0*/
	{0x1F,0x04,0x04,0x04,0x04,0x04,0x04},/*"T",0*/
	{0x09,0x09,0x09,0x09,0x09,0x09,0x06},/*"U",0*/
	{0x00,0x09,0x06,0x06,0x02,0x00,0x00},/*"V",0*/
	{0x11,0x11,0x11,0x11,0x15,0x1B,0x11},/*"W",0*/
	{0x00,0x0F,0x06,0x04,0x06,0x09,0x00},/*"X",0*/
	{0x00,0x09,0x06,0x02,0x02,0x02,0x00},/*"Y",0*/
	{0x00,0x0E,0x04,0x02,0x02,0x0F,0x00},/*"Z",0*/
	{0x04,0x04,0x04,0x04,0x04,0x04,0x04},/*"[",0*/
	{0x00,0x00,0x02,0x02,0x04,0x04,0x08},/*"\",0*/
	{0x02,0x02,0x02,0x02,0x02,0x02,0x02},/*"]",0*/
	{0x00,0x08,0x14,0x22,0x22,0x00,0x00},/*"^",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x0F},/*"_",0*/
	{0x02,0x00,0x00,0x00,0x00,0x00,0x00},/*"`",0*/
	{0x00,0x00,0x00,0x07,0x05,0x0F,0x00},/*"a",0*/
	{0x00,0x01,0x05,0x0B,0x09,0x07,0x00},/*"b",0*/
	{0x00,0x00,0x00,0x07,0x01,0x0E,0x00},/*"c",0*/
	{0x00,0x08,0x08,0x0F,0x09,0x06,0x00},/*"d",0*/
	{0x00,0x00,0x00,0x0F,0x01,0x06,0x00},/*"e",0*/
	{0x00,0x0C,0x02,0x02,0x02,0x02,0x00},/*"f",0*/
	{0x00,0x00,0x00,0x07,0x06,0x06,0x0F},/*"g",0*/
	{0x00,0x01,0x05,0x0B,0x09,0x0F,0x00},/*"h",0*/
	{0x00,0x00,0x00,0x02,0x02,0x02,0x00},/*"i",0*/
	{0x00,0x04,0x00,0x04,0x04,0x04,0x06},/*"j",0*/
	{0x00,0x01,0x01,0x05,0x06,0x07,0x00},/*"k",0*/
	{0x00,0x02,0x02,0x02,0x02,0x02,0x00},/*"l",0*/
	{0x00,0x00,0x00,0x0F,0x0D,0x0F,0x00},/*"m",0*/
	{0x00,0x00,0x00,0x0F,0x09,0x0F,0x00},/*"n",0*/
	{0x00,0x00,0x00,0x0F,0x09,0x06,0x00},/*"o",0*/
	{0x00,0x00,0x00,0x0F,0x09,0x06,0x01},/*"p",0*/
	{0x00,0x00,0x00,0x0F,0x09,0x06,0x08},/*"q",0*/
	{0x00,0x00,0x00,0x06,0x02,0x02,0x00},/*"r",0*/
	{0x00,0x00,0x00,0x06,0x04,0x06,0x00},/*"s",0*/
	{0x00,0x00,0x02,0x02,0x02,0x06,0x00},/*"t",0*/
	{0x00,0x00,0x00,0x09,0x09,0x06,0x00},/*"u",0*/
	{0x00,0x00,0x00,0x06,0x06,0x00,0x00},/*"v",0*/
	{0x00,0x00,0x00,0x07,0x05,0x06,0x00},/*"w",0*/
	{0x00,0x00,0x00,0x06,0x04,0x06,0x00},/*"x",0*/
	{0x00,0x00,0x00,0x06,0x06,0x04,0x02},/*"y",0*/
	{0x00,0x00,0x00,0x06,0x02,0x06,0x00},/*"z",0*/
	{0x00,0x04,0x04,0x04,0x04,0x04,0x00},/*"{",0*/
	{0x04,0x04,0x04,0x04,0x04,0x04,0x04},/*"|",0*/
	{0x00,0x02,0x02,0x02,0x02,0x02,0x00},/*"}",0*/
	{0x0F,0x00,0x00,0x00,0x00,0x00,0x00},/*"~",0*/
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00}/*"",0*/
};

unsigned char const DISPdat8X10[28][10]=
{
  {0x1C,0x22,0x41,0x41,0x41,0x41,0x41,0x41,0x22,0x1C},//0
  {0x08,0x0C,0x0A,0x08,0x08,0x08,0x08,0x08,0x08,0x08},//1
  {0x3C,0x42,0x42,0x40,0x20,0x10,0x08,0x04,0x02,0x7E},//2
  {0x3E,0x40,0x40,0x20,0x18,0x20,0x40,0x40,0x21,0x1E},//3
  {0x40,0x60,0x50,0x48,0x44,0x42,0x7E,0x40,0x40,0x40},//4
  {0x3F,0x01,0x01,0x0F,0x10,0x20,0x20,0x20,0x11,0x0E},//5
  {0x10,0x08,0x04,0x02,0x1E,0x21,0x41,0x41,0x22,0x1C},//6
  {0x7F,0x20,0x10,0x10,0x08,0x08,0x04,0x04,0x04,0x04},//7
  {0x1C,0x22,0x41,0x22,0x1C,0x22,0x41,0x41,0x22,0x1C},//8
  {0x1C,0x22,0x41,0x41,0x42,0x3C,0x20,0x10,0x08,0x04},//9
  {0x08,0x08,0x08,0x7F,0x08,0x08,0x08,0x08,0x08,0x00},//"十"
  {0x00,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0x00,0x00},//"一"
  {0x00,0x00,0x3C,0x00,0x00,0x00,0x7E,0x00,0x00,0x00},//"二"
  {0x00,0x7E,0x00,0x00,0x3C,0x00,0x00,0xFF,0x00,0x00},//"三"
  {0x00,0xFF,0xA9,0xA9,0xA9,0xC5,0x83,0x81,0xFF,0x00},//"四"
  {0x00,0x7E,0x08,0x08,0x3C,0x48,0x44,0x44,0xFF,0x00},//“五”
  {0x00,0x04,0x08,0xFF,0x00,0x24,0x44,0x82,0x01,0x00},//"六"
  {0x00,0x08,0x08,0x48,0x3C,0x0B,0x08,0x88,0xF0,0x00},//"七"
  {0x00,0x10,0x14,0x14,0x24,0x22,0x22,0x42,0x81,0x00},//"八"
  {0x00,0x02,0x02,0x1F,0x12,0x12,0x12,0x52,0x61,0x00},//"九"
  {0x08,0x08,0x08,0x7F,0x08,0x08,0x08,0x08,0x08,0x00},//"十"
  {0xFE,0x92,0xBA,0x92,0xFE,0xBA,0xAA,0xB9,0x41,0x00},//"周"
  {0x7F,0x41,0x41,0x41,0x7F,0x41,0x41,0x41,0x7F,0x00},//"日"
  {0xFC,0x84,0x84,0xFC,0x84,0x84,0xFC,0x84,0xA2,0x41},//"月"
  {0x02,0xE5,0x12,0x08,0x08,0x08,0x08,0x08,0x10,0xE0},//"℃"
  {0x00,0x00,0x00,0x00,0x08,0x1F,0x08,0x00,0x00,0x00},//"->"
  {0x00,0x00,0x06,0x06,0x00,0x00,0x06,0x06,0x00,0x00},//:
  {0x00,0x00,0x00,0x00,0x06,0x06,0x00,0x00,0x00,0x00}//-
};
#endif  // 0

#endif // __FONT_H